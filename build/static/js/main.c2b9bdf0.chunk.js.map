{"version":3,"sources":["assets/angularjs-logo.png","logo.svg","components/Header.js","components/IssueThumb.js","components/Issues.js","components/Home.js","components/Issue.js","Router.js","components/IssuePage.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","logo","require","HeaderComponent","react_default","a","createElement","className","src","alt","Component","moment","IssueThumb","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","issue","title","created_at","fromNow","updated_at","user","login","avatar_url","Link","to","concat","id","IssuesComponent","_this2","issues","map","key","components_IssueThumb","fragment","Home","loading","Issues","location","hash","IssueComponent","href","html_url","body","routes","path","component","pathname","slice","filter","console","log","Issue","pathID","RouteConstructor","route","Route","render","assign","data","ConfiguredRouter","BrowserRouter","i","Router_RouteConstructor","exact","components_Home","App","issuesArr","Header","Router","date","Date","setDate","getDate","dateParam","toISOString","fetch","then","res","json","setState","prev","Boolean","window","hostname","match","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c2b9bdf0.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/angularjs-logo.d927cf1a.png\";","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { Component } from 'react';\nconst logo = require('../assets/angularjs-logo.png');\n\nclass HeaderComponent extends Component {\n    render() {\n        return (\n            <div className='header position-fixed d-flex align-items-center justify-content-center p-3'>\n                <div className='d-flex col-10 justify-content-between align-items-center'>\n                    <div className='d-flex align-items-center'>\n                        <div>\n                            <img className='logo' src={logo} alt=\"angular-logo\" />\n                        </div>\n                        <h3 className='title'>Angular Issues Tracker</h3>\n                    </div>\n                    <p>A Coding Assessment for Levels Beyond</p>\n                </div>\n            </div>\n            );\n}\n}\n\nexport default HeaderComponent;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nconst moment = require('moment');\n\nclass IssueThumb extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n\n        }\n    }\n    render() {\n        return (\n            <div className='issue'>\n                <div className='issue-header border-bottom p-0 pb-1 m-0 d-flex justify-content-between'>\n                    <div className='issue-thumb-data mr-3 text-left'>\n                        <p><span className='text-muted'>Issue: </span>{this.props.issue.title}</p>\n                        <p><span className='text-muted'>Created: </span>{moment(this.props.issue.created_at).fromNow()}</p>\n                        <p><span className='text-muted'>Updated: </span>{moment(this.props.issue.updated_at).fromNow()}</p>\n                    </div>\n                    <div className='user'><p><span className='text-muted'>User: </span> {this.props.issue.user.login}</p><img src={this.props.issue.user.avatar_url} className='user-avatar' alt=\"user avatar\" /></div>\n                </div>\n                <Link to={`${this.props.issue.id}`}>Click here for more info</Link>\n            </div>\n            );\n}\n}\n\nexport default IssueThumb;\n\n","import React, { Component } from 'react';\nimport IssueThumb from './IssueThumb.js';\n\nclass IssuesComponent extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n\n        }\n    }\n    render() {\n        return (\n            <div className='issues-container col-12 mx-auto d-flex justify-content-center flex-wrap'>\n                { this.props.issues.map(issue => <div key={issue.id} className='issue-group-item'><IssueThumb fragment={this.props.fragment} issue={issue}/></div>) }\n            </div>\n            );\n}\n}\n\nexport default IssuesComponent;\n","import React from 'react';\nimport IssuesComponent from './Issues.js';\nconst queryString = require('query-string');\nconst Home = (props) => (\n    <div className='col-8 mx-auto'>\n        <div className='col-12 text-left pt-5 pb-3 content-title border-bottom '><h5>Recent Angular Github Issues</h5></div>\n        { props.loading ? <h3>loading...</h3> : <IssuesComponent loading={props.loading} fragment={props.location.hash} issues={props.issues} /> }\n    </div>\n);\nexport default Home;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\nclass IssueComponent extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n\n        }\n    }\n    render() {\n        return (\n            <div className='issue'>\n                <div className='issue-header border-bottom p-0 m-0 d-flex justify-content-between align-items-center'>\n                    <div className='issue-info text-left'>\n                        <p><span className='text-muted'>Issue: </span>{this.props.issue.title}</p>\n                        <p><span className='text-muted'>Issue URL:</span> <a href={this.props.issue.html_url}>{this.props.issue.html_url}</a> </p>\n                        <p><span className='text-muted'>State:</span> {this.props.issue.state}</p>\n                    </div>\n                    <div className='m-1 user'>\n                        <p>{this.props.issue.user.login}</p>\n                        <img src={this.props.issue.user.avatar_url} className='user-avatar' alt=\"user avatar\" />\n                    </div>\n                </div>\n                <div className='issue-body'>\n                    <Link to='/'>Back</Link>\n                    <p>{this.props.issue.body}</p>\n                </div>\n            </div>\n            );\n}\n}\n\nexport default IssueComponent;\n","import React from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport Home from './components/Home.js';\nimport IssuePage from './components/IssuePage.js';\n\nconst routes = [\n    {\n        path: \"/:id\",\n        component: IssuePage\n    }\n]\n\nconst RouteConstructor = (route) => (\n    <Route\n        path={route.path}\n        render={props => (\n        <route.component {...props} issues={route.data.issues} />\n        )} />\n);\n\nconst ConfiguredRouter = (props) => (\n    <Router>\n        <div>\n            {routes.map((route, i) => <RouteConstructor key={i} {...route} data={props} />)}\n            <Route path='/' exact render={data => (\n                <Home {...data} issues={props.issues} />\n                )} />\n        </div>\n    </Router>\n);\n\nexport default ConfiguredRouter;\n","import React from 'react';\nimport Issue from './Issue.js'\n\nconst IssuePage = (props) => {\n    const id = props.location.pathname.slice(1)\n    const issue = props.issues.filter(issue => issue.id === +id )[0]\n    console.log('issue', issue);\n    return (\n        <div className='col-8 mx-auto pt-4'>\n            <div className='col-12 d-flex p-0 my-3 justify-content-between border-bottom'><h5>Issue ID: {id}</h5><h5>{issue ? issue.title : null}</h5></div>\n            { issue ? <Issue pathID={id} issue={issue} /> : <h1>Loading Issue...</h1> }\n        </div>\n    );\n}\n\nexport default IssuePage;\n","import React, { Component } from 'react';\nimport HeaderComponent from './components/Header.js'\nimport IssuesComponent from './components/Issues.js';\nimport logo from './logo.svg';\nimport './App.css';\nimport Home from './components/Home.js';\nimport ConfiguredRouter from './Router.js';\n\nconst moment = require('moment');\n\nconst baseURL = \"https://api.github.com/repos/angular/angular/issues\";\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            issuesArr: [],\n            loading: true\n        }\n    }\n    render() {\n        return (\n            <div className=\"App\">\n                <HeaderComponent />\n                <div className='main pt-5 container-flex pt-3'>\n                    <ConfiguredRouter loading={this.state.loading} issues={this.state.issuesArr} />\n                </div>\n            </div>\n            );\n    }\n    componentDidMount() {\n        const date = new Date();\n        date.setDate(date.getDate() - 7);\n        const dateParam = moment(date).toISOString();\n        return fetch(`${baseURL}?since=${dateParam}&sort=created`)\n            .then(res => res.json())\n            .then(json => {\n                this.setState(prev => ({\n                    issuesArr: json,\n                    loading: false\n                }));\n            })\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport './main.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}